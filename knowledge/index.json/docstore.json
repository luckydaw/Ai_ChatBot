{"docstore/metadata": {"92fbde07-aa28-43e9-94d9-6c947ed9f6c7": {"doc_hash": "df11be05c4cfd508fdf24fb920231fe337570ec058ac885c61531c2abed3f062"}, "67328000-a456-41c6-b338-7b19134c7f8a": {"doc_hash": "0c0b68e4a80b1e595aeea9df33499b23fdb1f8b65874abaa9bf32b19b17ad77b"}, "4f270ea8-5119-457f-b30f-f935cacfcc05": {"doc_hash": "8b993b9207d8bafc74e14e9b22edf6d8a1a422c6b71ff706316985762214d6cd"}, "c8c03c6f-40c9-4056-af40-105edc4e67da": {"doc_hash": "e9605c3215d1aee578b30d72a1fd5c49c47d2c589c677c2ed63fc800c2390b02"}, "6fc374f6-e2bb-497f-aae8-e26a1670aef3": {"doc_hash": "2a474f7cb7a27ba3b2be50152de623a3435525126dc385a33435a7029c777f69"}, "90e5e713-b69e-4464-a87d-f3307429e275": {"doc_hash": "ddd516df5e5d9501c240f0910309d26f6528d55aac554b77841d19824fc3701c"}, "88b56d42-63e5-4a04-b352-3397c43e7bbf": {"doc_hash": "ac7bee687acb54bc4c2378afa525397f9111dfca77e5b9a0bb4b7d1250e98f9a"}, "4bf62372-e0f0-4d06-8436-9c49b023b393": {"doc_hash": "947cb74fe62cc4b0ea408a641868ea98afb6ce190dc34fb67fc99f78ce602d63"}, "dc3b7b00-1362-44fd-853a-5fb636b69642": {"doc_hash": "cd8800e459f9f1907ea09d838a6a79d7dc2a43a7e8018486bc4966ea9ea0057b"}, "cdf64a4a-429b-4a24-9676-73f2814b7ec2": {"doc_hash": "ac1e1a8c7a8c3a28231fed2274ebceec1803b84004c7264c41612754c7acf72f"}, "22c53d3c-0070-44b9-b58a-0af4bf4a5a49": {"doc_hash": "685eaeb7662cb77d70522d6143d67717b92e760280269d482561f00b32d2eee4"}, "0a2d88d6-ec11-4d4f-8987-780af10b3f5c": {"doc_hash": "77b8a2bb9d9ad198f14b69174f0cf302f687288ba27472d412ac6fc1094a89c1"}, "5b13be56-0e05-4ee1-8976-0fb8d204cd0e": {"doc_hash": "65560492b0559abdb1b30b3181f2a39b68963cb6e96c3bb0ebd40ed4e6b4e740"}, "1664391b-e9c9-4576-9efa-7a7ffb44e1a8": {"doc_hash": "91c61721b25a62a0000fe5e42cee1d1d6d9a3bfec8c38f2fbf75299b26a81e2a"}, "1b1fd5dd-249b-4d05-a1c8-c1e9019aa671": {"doc_hash": "01a930139383b4c5838eb3982f21bf99817954c31a9f05ffd2729e73f06d2019", "ref_doc_id": "92fbde07-aa28-43e9-94d9-6c947ed9f6c7"}, "7556982d-78ce-4c62-8ad3-88cd390ccafc": {"doc_hash": "daf60b09bcd269cfb1318dcbc609eda662b79d4924cdea47acd88f80b6bbf689", "ref_doc_id": "67328000-a456-41c6-b338-7b19134c7f8a"}, "6ef2dc9d-4010-435a-b627-4527da9e9fee": {"doc_hash": "226a24bfb166a4ba84936d0f923d79272ebe325042b6bb92dfd199ff8a66fdc2", "ref_doc_id": "4f270ea8-5119-457f-b30f-f935cacfcc05"}, "a8983c4d-df4f-4be3-823d-9871f94178fc": {"doc_hash": "01ae5cf3bb0279ad577af835972153ebeba059821cea3d65f5018201c7f93365", "ref_doc_id": "c8c03c6f-40c9-4056-af40-105edc4e67da"}, "c1fa82e0-c487-44f8-85e6-d0d54e1c26c8": {"doc_hash": "d1091e680af74ad1985e780d4887d3057ebd4c72e5ec18add3240f2cc92ae75c", "ref_doc_id": "6fc374f6-e2bb-497f-aae8-e26a1670aef3"}, "af194583-e290-4e41-9652-6fc09a9b33d9": {"doc_hash": "dbb2bdf593ed14715f7bb46e3d33620b58fb031f04ca5334f947f1d3a1dc1029", "ref_doc_id": "90e5e713-b69e-4464-a87d-f3307429e275"}, "442ca05d-5af1-42a2-8e6b-1fdb3b2660b0": {"doc_hash": "38561a0e1e4527ce2c96b933830a95be7678931c9842e884c0ba441bf31884b1", "ref_doc_id": "88b56d42-63e5-4a04-b352-3397c43e7bbf"}, "7a4da92c-e692-4e92-92be-9c937af00ffe": {"doc_hash": "5b2abbd8b898b0201e97a7692e23b183e2f9d63b1bf60cb0bfba34843173efba", "ref_doc_id": "4bf62372-e0f0-4d06-8436-9c49b023b393"}, "f8d5162d-bd2f-47d0-ba15-2abf35ad375c": {"doc_hash": "605369293eadeb7255d75b0d38908077e0d3d9472215184d59a2674bfabba246", "ref_doc_id": "dc3b7b00-1362-44fd-853a-5fb636b69642"}, "47a0179a-68ee-4d8b-8f38-f52337de7081": {"doc_hash": "30f31beb8eaa21808b6fd00adb1d97afbe93a8c0e1d1628bf8a608294c0bcf94", "ref_doc_id": "cdf64a4a-429b-4a24-9676-73f2814b7ec2"}, "8422085d-0839-4898-9705-ac876bc685e2": {"doc_hash": "864e15f34fda18dbb7f86a6d5a8db535a66751852b03ce94e9dfd07ac9925a28", "ref_doc_id": "22c53d3c-0070-44b9-b58a-0af4bf4a5a49"}, "6946ef30-79c8-450b-837c-55485c7a0996": {"doc_hash": "e720e35ccc0972e3de7cae41ce981daa9134a93d8eb56f14fafd0783de5dfaa0", "ref_doc_id": "0a2d88d6-ec11-4d4f-8987-780af10b3f5c"}, "e33aa264-ba37-49c8-9521-8270a59d5ca6": {"doc_hash": "da1d7d2a3e134fb87e407bf7dafd56ca7879021c85a65c2bd5a29cb7caab30c5", "ref_doc_id": "5b13be56-0e05-4ee1-8976-0fb8d204cd0e"}, "71b319e8-0528-4000-be1f-8c76eee2528a": {"doc_hash": "9f64153806f38f31875e301221d8bce977fb8984b5920316cc5040d294691136", "ref_doc_id": "1664391b-e9c9-4576-9efa-7a7ffb44e1a8"}}, "docstore/data": {"1b1fd5dd-249b-4d05-a1c8-c1e9019aa671": {"__data__": {"id_": "1b1fd5dd-249b-4d05-a1c8-c1e9019aa671", "embedding": null, "metadata": {"page_label": "1", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "92fbde07-aa28-43e9-94d9-6c947ed9f6c7", "node_type": null, "metadata": {"page_label": "1", "file_name": "DialogView FRD New.pdf"}, "hash": "df11be05c4cfd508fdf24fb920231fe337570ec058ac885c61531c2abed3f062"}}, "hash": "01a930139383b4c5838eb3982f21bf99817954c31a9f05ffd2729e73f06d2019", "text": "DialogView Communication Platform  \n  \nFunctional Requirements Document", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7556982d-78ce-4c62-8ad3-88cd390ccafc": {"__data__": {"id_": "7556982d-78ce-4c62-8ad3-88cd390ccafc", "embedding": null, "metadata": {"page_label": "2", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "67328000-a456-41c6-b338-7b19134c7f8a", "node_type": null, "metadata": {"page_label": "2", "file_name": "DialogView FRD New.pdf"}, "hash": "0c0b68e4a80b1e595aeea9df33499b23fdb1f8b65874abaa9bf32b19b17ad77b"}}, "hash": "daf60b09bcd269cfb1318dcbc609eda662b79d4924cdea47acd88f80b6bbf689", "text": "Overview  \nDialogView  is a unified communication platform aiming to help customers interact with the help desk \nCustomer Service of the organization effectively to resolve issues. The platform provides support in the \nform of Webchat, WhatsApp  chat,  SMS, Voice call, Video call, Screen sharing and Co -browsing. Platform \nalso provides  the ability to implement virtual agents and chat bots.  \nThe product would be used by organization (primarily banking/Insurance) to help their customers have \nan active commu nication platform with their clients. The application will have two modules -   \n\u2022 Client -side chat window  \n\u2022 Agent side application  \nThe client side window will be deployed on to the organization\u2019s website and will act as a chat bot for \nthe end customers to co nnect to the agents. The agent side application will be a web application that \ncan be accessed by the agents of the organization  to address the issues raised by the customers.  \nUser Classes and Characteristics   \nThere are different types of users who will b e accessing this application. The list of actors are -  \n\u2022 End customer - Will access the client side chat window to communicate with agent  \n\u2022 Enterprise Admin - Millennium admin who will be accessing the system to understand the list of \nclient organizations who have registered for the application usage. For systems that are hosted \nat client location, the enterprise admin will not have any direct control over the client \norganization. For those customers using the cloud instance, the Enterprise ad min will exercise a \nminimal amount of control.  \n\u2022 Client organization admin - This admin has the privilege to add Agents and assign them as \nmanagers/admins/agents. They also have privilege to assign department and teams to agents. \nThey have overall control ov er the applications and can alter settings, initiate integrations and \nother such features of the application.  \n\u2022 Manager - A senior agent who has a team assigned under him/her. The manager can monitor \nthe conversations of other agents under them and can take decisions pertaining to an ongoing \nconversation. The manager also has access to agent dashboard to perform analytics on the \nagents.  \n\u2022 Agent - The agent is the primary contact for the clients. The agents engage in live conversations \nwith the clients and work on resolving the client issues. The agent has the privilege to chose \ntheir mode of communication from the available channels in the application.  \n\u2022 Tag \u2013 Unique name. F or ease of use , tags can be presented as a command button for login users. \n(Make a payment,  get statement summary, Payoff Statement, Open an Account, Close account \netc\u2026)  \n\u2022 Bots - There would be several bots in the application to manage each aspect of the application. \nThe client communication will be initially handled by the concerned bot before.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6ef2dc9d-4010-435a-b627-4527da9e9fee": {"__data__": {"id_": "6ef2dc9d-4010-435a-b627-4527da9e9fee", "embedding": null, "metadata": {"page_label": "3", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4f270ea8-5119-457f-b30f-f935cacfcc05", "node_type": null, "metadata": {"page_label": "3", "file_name": "DialogView FRD New.pdf"}, "hash": "8b993b9207d8bafc74e14e9b22edf6d8a1a422c6b71ff706316985762214d6cd"}}, "hash": "226a24bfb166a4ba84936d0f923d79272ebe325042b6bb92dfd199ff8a66fdc2", "text": "Onboard ing Flow  \nA Company has to be onboarded into DialogView in order for them to integrate the Chat Bot and add \nagents. A company can be onboarded directly by the Super Admin  of Dialog View  or they can visit the \ndialogview .com website and sign up.  \nSign Up Flow:  \n\u2022 A new company visits the DialogView website and signs up from https://dialogview.com/plans/ . \n\u2022 The company has to enter the following fields to complete the Sign Up form.  \n \nSl No  Field Name  Field Type  \n1 First Name  Alphanumeric  \n2 Last Name  Alphanumeric  \n3 Company Email  Alphanumeric  \n4 Company Name  Alphanumeric  \n5 Role  Alphanumeric  \n6 Company Web URL  Alphanumeric  \n7 Company Number  Numeric  \n \n\u2022 After they click on submit, the request can be viewed by the Millennium  Super  Admin in the \nEnquiry List tab.  \n\u2022 The Millennium Admin should be able to verify the details entered and send a link to the email \nprovided in the registration form.  \n\u2022 The Company Admin can click on the link to set their password and login to the Admin portal.  \nManual Onboarding  \nThe Millennium Admin should have an \u201cAdd Button\u201d in the accounts page.  \nWhen they click on it, they should be able to register a new company.  \nThe Millennium Admin can manually add a new company into DialogView by entering the following details \n: \n \nSl No  Field Name  Field Type  \n1 First Name  Alphanumeric  \n2 Last Name  Alphanumeric  \n3 Company Email  Alphanumeric  \n4 Company Name  Alphanumeric  \n5 Role  Alphanumeric  \n6 Company Web URL  Alphanumeric", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "a8983c4d-df4f-4be3-823d-9871f94178fc": {"__data__": {"id_": "a8983c4d-df4f-4be3-823d-9871f94178fc", "embedding": null, "metadata": {"page_label": "4", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8c03c6f-40c9-4056-af40-105edc4e67da", "node_type": null, "metadata": {"page_label": "4", "file_name": "DialogView FRD New.pdf"}, "hash": "e9605c3215d1aee578b30d72a1fd5c49c47d2c589c677c2ed63fc800c2390b02"}}, "hash": "01ae5cf3bb0279ad577af835972153ebeba059821cea3d65f5018201c7f93365", "text": "7 Company Number  Numeric  \n \nA new user can be added into the Company by entering the following fields:  \nSl No   Field Name   Field Type   \n1  First Name  Alphanumeric  \n2  Last Name  Alphanumeric  \n3  Email ID  Alphanumeric  \n4  Contact Number  Numeric  \n5  Role  Drop Down List  \n \nWhen a company is registered with DialogView, the Admin gets access to the Admin / Agent console. In \norder to onboard the chat bot into the company website, the application provides a snippet of code which \nis to be added in the HTML section of the website. The chat bot is then accessible to the end customers \nthrough which the conversation can be started.  \nClient -Side  Chat Window -  \n\u2022 When at user clicks on the chat bubble the initial chat screen loads up asking the user to enter \ntheir details like - Name, Email id and Question.  \n\u2022 When this is entered, the Bot starts the conversation and waits for the response from the \ncustomer.  \n\u2022 The customer and Bot conversation takes place according to the intents.  \n\u2022 Intents are created by the application which are listened to by the bot and responds with respect \nto them.  \n\u2022 If there are no intents to be found, or the u ser needs to talk to an agent directly, user needs to \npress the \u2018Talk to an Agent\u2019 button . Once the chat starts, the client  must have privileges to \nstart/receive a voice call, video call and send/receive webchat messages  \n\u2022 During an ongoing call, the client must be able to go back to chat and then return to the ongoing \ncall. \n\u2022 The client must be able to receive a screen share from  the agent.  \n\u2022 The client  must be able to perform co -browsing with the agent  vice versa.  \n\u2022 When the agent ends a chat, the client must receive a survey form to be filled or a rating which \ncan be setup at the admin level  \nConversation screen - \nThis screen can be accessed by Agents, Managers and Admins. When a client initiates a conversation \nand requests to chat to an agent, the chat messages appear on this screen. The various modules in this \nscreen are : \n\u2022 Customer Queues  \n\u2022 Online/Offline messages  \n\u2022  Agent online/offline  \n\u2022  Profile", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c1fa82e0-c487-44f8-85e6-d0d54e1c26c8": {"__data__": {"id_": "c1fa82e0-c487-44f8-85e6-d0d54e1c26c8", "embedding": null, "metadata": {"page_label": "5", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6fc374f6-e2bb-497f-aae8-e26a1670aef3", "node_type": null, "metadata": {"page_label": "5", "file_name": "DialogView FRD New.pdf"}, "hash": "2a474f7cb7a27ba3b2be50152de623a3435525126dc385a33435a7029c777f69"}}, "hash": "d1091e680af74ad1985e780d4887d3057ebd4c72e5ec18add3240f2cc92ae75c", "text": "\u2022 Chat window (SMS, Social media messages, Voice Call, Audio /Video, Chat, Co -browsing, Screen \nShare, Toggle between Chat and voice/video call, Task list, Meeting schedules, Chatbot \nconversations)  \nLogin ( common for all the user)  \n\u2022 The agent must be able to login to the application through this screen.  \n\u2022 During login, the Username and password of the agent needs to be asked.  \n\u2022 There should be a forgot password option for the agent to reset his password if forgotten.  \n\u2022 On pressing the \u2018Forgot Password\u2019 option, the agent must be redirected to another screen to \nenter his email id. A link must be sent to his email id to reset password.  \n\u2022 On clicking the link the user must be redirected to the change password page w here new \npassword can be set.  \n\u2022 Once new password is set, the user must be redirected to the login page to login again.  \n\u2022 Upon login, the agent must be redirected to the conversations screen.  \n\u2022 All other user (Manager, Admin and Enterprise Admin) will be redire cted to the dashboard upon  \nRouting Logic  \n\u2022 When a client first reaches out for agent , the Welcome Bot would start the conversation by \nasking for the customer details. If the customer enters the details and presses the send button, \nthen the chat is continued by the chat bot. (All conversations are initiated by the bot) but user \nwill have the option to \u201cSpeak to an agent\u201d  \n\u2022 If the customer presses the \u2018Talk to an Agent\u2019 button then the chat is taken up by a live agent \nand client is listed in the queue.  \n\u2022 The routing logic enables the application to pick the right agent using various rules. The routing \nalgorithm should be as given below -  \no From the list of agents that support the channel, identify the online agents and send the \nmessage request to all these online agents.  \no Once an agent picks up this message for conversation, the agent becomes engaged and \nwill not receive other new message  request .  \no The engaged message will be removed from the customer queue of other agents.  \no If all agents are offline (outside work hours) when the client sends a message, then the \nmessage goes to the offline queue of the agent. The agent can respond from the offline \nqueue through mail/ calls.  \no Once a conversation ends, the agent is moved back to online status and will start \nrecei ving messages into his online queue.  \no If the customer asks for a particular agent, the bot searches the database  \n\u25aa If there is only one person with the name, the chat is routed directly to that \nAgent\u2019s queue  \n\u25aa If there is more than one agent with the same name, all the names are fetched \nand shown to the customer  \n\u25aa The customer should have the option to select the agent's name  \n\u25aa The chat is routed to that particular agent  \no", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "af194583-e290-4e41-9652-6fc09a9b33d9": {"__data__": {"id_": "af194583-e290-4e41-9652-6fc09a9b33d9", "embedding": null, "metadata": {"page_label": "6", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90e5e713-b69e-4464-a87d-f3307429e275", "node_type": null, "metadata": {"page_label": "6", "file_name": "DialogView FRD New.pdf"}, "hash": "ddd516df5e5d9501c240f0910309d26f6528d55aac554b77841d19824fc3701c"}}, "hash": "dbb2bdf593ed14715f7bb46e3d33620b58fb031f04ca5334f947f1d3a1dc1029", "text": "Conversation Screen  \n\u2022 This is the screen that is mainly used for the conversation between th e client and the agent.  \n\u2022 The various communications between the client and agent would happen through this screen  \n\u2022 Client Messaging Channels  - The agents must be able to receive messages from clients through \nwebchat, WhatsApp and SMS.  The icon corresponding to a message must be displayed correctly \ndepicting the channel from which the message came.  \n\u2022 Message Queues - A message from  the client mu st come into the online queue tab on the \nconversation screen. This lists all the messages, from all the different channels  received  when \nthe agent is in online state. If a message is sent to the agent when the agent in offline, the \nmessage will be listed under the offline queue. Once a message is taken up by the agent for \nconversation by p icking up the conversation , the message moves into the engaged tab.  \n\u2022 Multiselect conversations \u2013 The agent should be able to select multiple c hats from the queue at \na time. When a chat is selected, there should be an option to minimise / close the chat and \nchoose another on from the queue. The notifica tions should be updated in such a way that a \nnew incoming me ssage as well as a new chat should come up in the front of the queue in a LIFO \nmodel. The agent shouldn\u2019t be able to select an other chat if the current chat has video / audio \nor screensharing on.  If the agent is currently in a chat, if another customer calls, the agent \nshould be able to answer the call as well as send messages to the current customer.  \n\u2022 Client Information  - When a client sends a message to the application, the details regarding the \nwebsite page the client is on, the question asked,  the phone number (in case of SMS  or \nWhatsApp  also (channel)), name of client (Guest - if not provided) needs to be captured. This \ninformation must be displayed in a too l-tip pop up when the cursor is placed near the client \nname in the online tab. For logged in users, the tool tip also needs to provi de statistics of past \nvisits.  \n\u2022 Voice Call  - In between conversation, the agent/ client must be able to initiate  a voice call. The \ncall must have a ringtone while it is getting connected. The call must show the status as \ninitiating call, call connected etc. in the chat area. Once the call is picked up (accept or reject call \nshould be enabled and continue to do the c hat) by the other user, the agent and client must be \nable to communicate with each other. The agent/client must be able to mute/unmute the voice \nin between call. The agent/client must be able to return to the chat screen while the call is \nactive. The call can be ended by either the agent or the client and proper message that the call \nhas been ended and by whom must be displayed in the chat area. The call transcript must be \nrecorded for training/future reference purpose. A disclaimer announcing the same must  be sent \nto the client before the call is started . Admin should have the ability to set the disclaimer  and \nthe content on or at the beginning of the chat conversation  \n\u2022 Video Call - In between conversation, the agent/ client must be able to initiate  a video call by \npressing the video call icon. The call must have a ringtone while it is getting connected ( once  the \nvideo call is connected the client should be able to mute the voice). The call must show the \nstatus as initiating call, call connected etc. in the chat area. Once the call is picked up by the \nother user, the agent and client must be able to communicate with each other. Video of both \nagent and client must appear on screen for both the parties. The agent/client must be able to \nmute/unmute the v oice in between call. The agent/client must be able to turn on/off the video \nin between call. The agent/client must be able to  toggle between  the chat screen while the call \nis active. The call can be ended by either the agent or the client and proper message that the call", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "442ca05d-5af1-42a2-8e6b-1fdb3b2660b0": {"__data__": {"id_": "442ca05d-5af1-42a2-8e6b-1fdb3b2660b0", "embedding": null, "metadata": {"page_label": "7", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "88b56d42-63e5-4a04-b352-3397c43e7bbf", "node_type": null, "metadata": {"page_label": "7", "file_name": "DialogView FRD New.pdf"}, "hash": "ac7bee687acb54bc4c2378afa525397f9111dfca77e5b9a0bb4b7d1250e98f9a"}}, "hash": "38561a0e1e4527ce2c96b933830a95be7678931c9842e884c0ba441bf31884b1", "text": "has been ended and by whom must be displayed in the chat area. The call transcript must be \nrecorded for training/future refer ence purpose. A disclaimer announcing the same must be sent \nto the client before the call is started.  \n\u2022 Screen Share  - The agent must be able to initiate a screenshare. The client must be able to \naccept the screen share and see the agent screen . While sharin g the screen both Agent and \nCustomer should have the ability to mute/unmute audio.  \n\u2022 Co-browsing - The agent must be able to start a co -browsing session with the client. Agent must \nbe able to select a document to begin co -browsing. The document must be sent to the client \nbefore initiating co -browsing.  Both parties can initiate a co -browsing session. A  Document co -\nbrowsing will have the initiating party upload a document and give the other party permission to \naccess the document using a link and pin. If it is a global co -browsing it will be a browsing \nsession of a webpage or a web application. In both i nstance the applications should be smart \nenough to identify personally identifiable information and mask it.  \n\u2022 Attachments - The agent/ client must be able to send/receive attachments through the chat \nwindow.  \n\u2022 Canned Messages \u2013 Agent to be presented with poss ible best answers for similar questions \nasked in the past. Once agent picks the answer the it will appear on the type portion of the chat \nwindow and agent is able to modify the answer then to send the message.  \n\u2022 End Conversation  - The agent must be able to end a conversation by pressing the end button. \nOn ending the conversation, the client must be presented with a survey  to rate the conversation \nand agent. A message must be displayed for the client indicating that the transcript  of the \nconversation would be emailed to the client. Upon conversation end, the agent must receive a \nsurvey screen rating the conversation. The agent must also be given the provision to enter notes \nand set reminders for follow ups. Chats once ended must ge t cleared from the conversation \npage and the customer must be moved to the closed chats tab.  \n\u2022 Notes  - The agent must be  prompted to include concluding notes if any when a chat is ended. \nThe notes corresponding to a chat must get saved along with the chat when a conversation is \nended.  \n\u2022 Reminders - On ending a conversation, the agent must be prompted to add reminders with \ndate. This feature enables  the agent to keep track of the follow up activities and to -do items \nrelated to a conversation. The list of reminders set at the end of the conversation must get \ndisplayed for the agent in the conversation screen sorted date wise.  The Reminder section will \nbe in the following format:  \no The list of reminders should be displayed with check boxes as a To \u2013 Do List  \no When a reminder  is completed, the agent should be given the ability to check the boxes \nand delete if necessary  \no All selected  reminders should strike off  \no All reminders should have Edit / Delete option  \no There should be an option to add a new reminder with following fields:  \n\u25aa Title  \n\u25aa Description  \n\u25aa Date  \n\u25aa Time  \n\u25aa Add the following buttons:", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7a4da92c-e692-4e92-92be-9c937af00ffe": {"__data__": {"id_": "7a4da92c-e692-4e92-92be-9c937af00ffe", "embedding": null, "metadata": {"page_label": "8", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bf62372-e0f0-4d06-8436-9c49b023b393", "node_type": null, "metadata": {"page_label": "8", "file_name": "DialogView FRD New.pdf"}, "hash": "947cb74fe62cc4b0ea408a641868ea98afb6ce190dc34fb67fc99f78ce602d63"}}, "hash": "5b2abbd8b898b0201e97a7692e23b183e2f9d63b1bf60cb0bfba34843173efba", "text": "\u2022 Save  \n\u2022 Cancel  \n\u2022 Close  \n\u2022 Conversation history  - When a chat is ended, the chat, audio, video and notes must get saved \nand should be available for reference in the conversation history page. During a c hat if the agent \npresses the conversation history button, all previous conversations of this client must get \ndisplayed.  There should be an option  to export the fields into a corresponding PDF / PNG or a \nCSV format. It should have the following fields:  \no Header  \n\u25aa Report Name  \n\u25aa Company Logo  \n\u25aa Company Name  \n\u25aa Created By  \n\u25aa Created Date  \no Body  \n\u25aa Inputs according to filters selected  \n\u25aa Output rows which contain  Channel type, Agent Name, topic, customer name.  \no Footer  \n\u25aa Page number  \n\u25aa Dialogview Logo  \n\u2022 Document Repository \u2013 The agent should have the ability to maintain a repository where they \ncan save all frequently used documents. The documents from thi s repository can be shared to \nthe client via screenshare, or directly through chat.  There should also be an option to select \nmultiple documents and send them together.  \n\u2022 Status  \u2013 The agent is given an option to switch the status between Online / Offline. When \nOnline, the agents will get notifications on new chats. When turned offline, the agent will not \nreceive new chat notifications.   When the agent is online, the profile picture should have a \nbadge with green c olour, and w hen an agent picks up the chat or a call, the status of that agent \nwill be changed to red.  Else the badge will be grey.  \n\u2022 Notifications  \u2013 When an agent is online, they are notified about the new chat in the following \nways  \no A notification sound  \no Blinking in the title bar  \no Badge in the title bar showing number of unread notifications  \no Badge in the customer queue  \no A notification badge in each chat window when clicked on takes to the bottom of the \nwindow.  \nConferencing  \nScheduled Conferencing  \nA scheduled conference involves the agent or the organizer scheduling a meeting at a planned date and \ninviting the participants. The meeting should be star ted by the agent / organizer and the participants \ncan join using the links.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f8d5162d-bd2f-47d0-ba15-2abf35ad375c": {"__data__": {"id_": "f8d5162d-bd2f-47d0-ba15-2abf35ad375c", "embedding": null, "metadata": {"page_label": "9", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc3b7b00-1362-44fd-853a-5fb636b69642", "node_type": null, "metadata": {"page_label": "9", "file_name": "DialogView FRD New.pdf"}, "hash": "cd8800e459f9f1907ea09d838a6a79d7dc2a43a7e8018486bc4966ea9ea0057b"}}, "hash": "605369293eadeb7255d75b0d38908077e0d3d9472215184d59a2674bfabba246", "text": "Following are the steps involved in this module:  \n\u2022 The agent can schedule a meeting by clicking on the \u201cNew Meeting\u201d link.  \n\u2022 The New Meeting window should have the following details:  \n \nField Name  Field Type  Description  \nMeeting Name  Alphanumeric  The name given to the \nmeeting / Title of the meeting  \nAttendees  Email  The list of attendees\u2019 email \naddresses  \nDate and Time  Date / Time picker  The date and time of the \nmeeting to be scheduled  \nAdditional Details  Alphanumeric  Any details / Notes related to \nthe meeting  \n \n\u2022 When the agent clicks on \u201cSchedule\u201d, meeting invites are sent to all the participants via email.  \n\u2022 The email content should be as follows:  \nHello <Name>!  \n          You have been invited to join a DialogView meeting. You can join the meeting by clicking \non the link below:  \n<link>  \nYou can also Dial In through < Number > with the meeting ID <id> and password <password>  \n\u2022 The participant\u2019s calendar should be upda ted with the meeting details.  \n\u2022 The participants can click on the meeting link and enter the meeting ID and password  \n\u2022 After entering the Meeting ID and Password, the interface should ask for their names  \n\u2022 The participants will be waiting in the lobby and the or ganizer will let them in  \nRealtime Conferencing  \nRealtime Conferencing refers to when multiple users are added to an ongoing call. The agent / \norganizer is in a conversation and one of them can initiate an audio / video call. The following \nsteps are involved in this module:  \n\u2022 Guests are added to the call by sending them invites through email or SMS.  \n\u2022 The Email / SMS content is as follows:  \nHello <Name>!  \n          You have been invited to join a DialogView meeting. You can join  the meeting by clicking \non the link below:  \n<link>", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "47a0179a-68ee-4d8b-8f38-f52337de7081": {"__data__": {"id_": "47a0179a-68ee-4d8b-8f38-f52337de7081", "embedding": null, "metadata": {"page_label": "10", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cdf64a4a-429b-4a24-9676-73f2814b7ec2", "node_type": null, "metadata": {"page_label": "10", "file_name": "DialogView FRD New.pdf"}, "hash": "ac1e1a8c7a8c3a28231fed2274ebceec1803b84004c7264c41612754c7acf72f"}}, "hash": "30f31beb8eaa21808b6fd00adb1d97afbe93a8c0e1d1628bf8a608294c0bcf94", "text": "You can also Dial In through < Number > with the meeting ID <id> and password <password>  \n\u2022 The number of users / guests added should be less than or equal to 6.  \n\u2022 The passcode should be numerical  \n\u2022 All events should be recorded and shown in the conversation window and conversation \nhistory.  \no Audio / Video calls started / ended  \nIntegrations  \n\u2022 Chat Bot:  Once the Company Admin logs in, under the \u201cIntegrations\u201d tab, the code snippet is \nprovided which can be added to the Company Website for the Chat Bot to start working.  \n\u2022 SMS : This feature enables the company to register their SMS number into the platform so that \ntheir customers can interact with the bot / live agents through SMS . At the time on onboarding, \nThe DialogView Admin should be able to select the SMS provider at the \u201cAccounts\u201d page.  \no There should be a drop down which shows two service pro viders:  \n\u25aa Joon  \n\u25aa Twilio  \no After the Onboarding is completed, the Admin of the company can go to Integrations \u2192 \nSMS and enter the following details:  \n\u25aa If the DialogView Admin has selected \u201cJoon\u201d as the SMS provider for that \nparticular company, The application should ask for the SMS number and token.  \n\u25aa Fields:  \n\u2022 SMS Number : Numeric  \n\u2022 Token : Alphanumeric  \n\u25aa If the DialogView Admin has selected \u201cTwilio\u201d as the S MS provider for that \nparticular company, The application should ask for the SMS number.  \n\u2022 SMS Number : Numeric  \no In case,  the company has their own Twilio account, the following fields must  be entered:  \n\u25aa Phone Number  \n\u25aa Account SID  \n\u25aa Auth Token  \n(Note : This function ality is not being implemented currently.)  \nThe agent should have the ability to initiate an SMS chat from the agent portal. Chats initiated \nlike this  should be kept open in the queue. The conversation would be between the client and \nthe agent with no invol vement of the bot.   \nThe SMS should be initiated with the following input fields:  \no ChannelType - (dropdown) SMS, Whatsapp  \no Customer Name  \no Number  \no Topic  \no Body", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8422085d-0839-4898-9705-ac876bc685e2": {"__data__": {"id_": "8422085d-0839-4898-9705-ac876bc685e2", "embedding": null, "metadata": {"page_label": "11", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c53d3c-0070-44b9-b58a-0af4bf4a5a49", "node_type": null, "metadata": {"page_label": "11", "file_name": "DialogView FRD New.pdf"}, "hash": "685eaeb7662cb77d70522d6143d67717b92e760280269d482561f00b32d2eee4"}}, "hash": "864e15f34fda18dbb7f86a6d5a8db535a66751852b03ce94e9dfd07ac9925a28", "text": "\u2022 WhatsApp : The Admin can login to the Admin Portal, under the \u201cIntegrations\u201d tab, and \nWhatsApp Number so that the company\u2019s WhatsApp  Business Number is integrated with the \nplatform.  \n\u2022 Facebook : The company can register their Facebook account with DialogView by enteri ng the \nToken ID  \n\u2022 Voice Call Integration : The company admin can go to the \u201cIntegrations\u201d page and add the \nfollowing details for SIP Trunk registration:  \no Main Numb er \no IP/Domain  \no Username  \no Password  \nSIP Integration  \nThe application provides a functionality for the companies to register their own SIP trunks so that it can \nbe configured in such a way that the end users can call to a Main Number and the DialogView Bot answers \nthe call. Once the call is answered, accordin g to the intents, the call can be transferred to the \ncorresponding agents or a department according to the use case. To register a SIP trunk, the following \nsteps are to be followed:  \n\u2022 After the company is onboarded, the Millennium Super Admin should have the ability to add the \nfollowing fields for a company:  \no Agent ID  \no Key \no Bot Number  \n\u2022 The Admin of the company can go into the User Management page and configure an extension \nfor each agent. T his way, the call can directly transferred to that particular a gent if needed. The \nfollowing details have to be entered:  \no VoIP number  \no Extension  \n\u2022 The agent can also configure the settings in such a way that the call can be routed directly into \ntheir soft phones.  \nAfter the SIP routing functionality is implemented, all calls landing on the main number should queue up \nin the agent console and all corresponding agents should have the ability to pick up calls just like chats.   \nVoice Call integration \u2013 Different cases:  \n1. Bot answering the call  \na. Calls hitting the trunk triggers the DialogView Bot  \nb. The bot listens to the customer and responds according to the intents saved  \nc. The customer can disconnect the call if the bot has answeres the query.  \n2. Calls coming into the agent queue in Web Console  \na. Calls hitting the trunk should be answered by the bot  \nb. The bot listens to the intents and responds accordingly  \nc. If there are no intents available, the call is transferred to the Dialog View agent \nqueue", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6946ef30-79c8-450b-837c-55485c7a0996": {"__data__": {"id_": "6946ef30-79c8-450b-837c-55485c7a0996", "embedding": null, "metadata": {"page_label": "12", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0a2d88d6-ec11-4d4f-8987-780af10b3f5c", "node_type": null, "metadata": {"page_label": "12", "file_name": "DialogView FRD New.pdf"}, "hash": "77b8a2bb9d9ad198f14b69174f0cf302f687288ba27472d412ac6fc1094a89c1"}}, "hash": "e720e35ccc0972e3de7cae41ce981daa9134a93d8eb56f14fafd0783de5dfaa0", "text": "d. The agents can see the calls in the queue and pick up the call to talk directly to the \ncustomer.  \n3. Call routing to Agent / Extension  \na. Calls hitting the trunk should be a nswered by the bot  \nb. The bot listens to the intents  \nc. If the customer asks for a particular agent, the bot searches the database  \ni. If there is only one person with the name, the call is routed directly to that \nAgent\u2019s queue  \nii. If there is more than one agent with the same name, all the names are fetched \nand shown to the customer  \niii. The customer should have the option to select the agent's name  \niv. The call is routed to that particular agent . \nv. If the routing option is enabled by the agent, it can b e configured in such a way \nthat the calls ring in the agent's soft phone.  \nvi. The agent can talk to the customer directly from the softphone  \nUser Management  \nThe Company Admin can add multiple users and assign teams and departments to them. The users can \nbe viewed, added or disabled from the \u201cUser Management\u201d page in the Admin console.  \nA new user can be added into the Company by entering the following fields:  \nSl No  Field Name  Field Type  \n1 First Name  Alphanumeric  \n2 Last Name  Alphanumeric  \n3 Email ID  Alphanumeric  \n4 Contact Number  Numeric  \n5 Role  Alphanumeric  \n \nTeams and Departments  \nA company will be provided with the functionality to add multiple Teams and Departments and assign \nagents to them. The Admin will be able to Add, Edit and Delete Teams and Departments.  \nIn the Teams View, the Admin will be able to view the list of Teams add ed, Associated Agents and Actions \nwhere they can Modify or Delete that particular Team.  \nIn the Departments page, the Admin will be able to view the list of Departments added, Associated Teams \nand Actions where they can Modify or Delete that particular Depa rtment.  \nThis module can be used when tag based system is implemented and that chat is routed to the appropriate \ndepartment.  \nCompany Admin User Privileges  \n\u2022 Admin user o f a company has various product level integrations and customisation features.  \n\u2022 Application UI customisations", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "e33aa264-ba37-49c8-9521-8270a59d5ca6": {"__data__": {"id_": "e33aa264-ba37-49c8-9521-8270a59d5ca6", "embedding": null, "metadata": {"page_label": "13", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5b13be56-0e05-4ee1-8976-0fb8d204cd0e", "node_type": null, "metadata": {"page_label": "13", "file_name": "DialogView FRD New.pdf"}, "hash": "65560492b0559abdb1b30b3181f2a39b68963cb6e96c3bb0ebd40ed4e6b4e740"}}, "hash": "da1d7d2a3e134fb87e407bf7dafd56ca7879021c85a65c2bd5a29cb7caab30c5", "text": "\u2022 Admin has the privilege to customize the client side chat window.  \n\u2022 Admin must be able to customise the colour , font and logo of the client side chat  window.  \n\u2022 Admin must be able to decide the initial message that is displayed beside the chat bubble.  \n\u2022 Admin must be able to select the list of tags and bots that will be used in the chat  \n\u2022 Enable/Disable recording disclaimer (disclaimer message)  \n\u2022 Add Departments and Managers (Import depts, managers and agents) not sure if we can do a \nsingle sign on . \n\u2022 Enable d isable chat window menu items (mute / email)  \n\u2022 Able to see current list of services/ Payment terms/departments and users  \n\u2022 Ability to view systems logs (access, users etc.) \nReports  \n\u2022 The conversation history page is when  a chat is ended, the chat, audio, video and notes must get \nsaved and should be available for reference in the conversation history page. During a chat if the \nagent presses the conversation history button, all previous conversations of this client must get  \ndisplayed. There should be an option to export the fields into a corresponding PDF / PNG or a \nCSV format. It should have the following fields:  \no Header  \n\u25aa Report Name  \n\u25aa Company Logo  \n\u25aa Company Name  \n\u25aa Created By  \n\u25aa Created Date  \no Body  \n\u25aa Inputs according to filters selected  \n\u25aa Output rows which contain Channel type, Agent Name, topic, customer name.  \no Footer  \n\u25aa Page number  \n\u25aa Dialogview Logo  \nThe reports should be created on the basis of  the input filters. The following are all the possible filters \nthat can be added:  \n\u2022 Start Date  \n\u2022 End Date  \n\u2022 Date Range  \n\u2022 Communicator \u2013 Agent / Bot  \n\u2022 Agent Name  \n\u2022 Channel  \n\u2022 Customer Name  \nThe reports should have a consolidated table containing the following fields:  \n\u2022 Cust omer Name  \n\u2022 Date and Time", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "71b319e8-0528-4000-be1f-8c76eee2528a": {"__data__": {"id_": "71b319e8-0528-4000-be1f-8c76eee2528a", "embedding": null, "metadata": {"page_label": "14", "file_name": "DialogView FRD New.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1664391b-e9c9-4576-9efa-7a7ffb44e1a8", "node_type": null, "metadata": {"page_label": "14", "file_name": "DialogView FRD New.pdf"}, "hash": "91c61721b25a62a0000fe5e42cee1d1d6d9a3bfec8c38f2fbf75299b26a81e2a"}}, "hash": "9f64153806f38f31875e301221d8bce977fb8984b5920316cc5040d294691136", "text": "\u2022 Agent Name  \n\u2022 Status  \n\u2022 Topic  \nThis should be followed by a detailed report of individual entries with all possible details:  \n\u2022 Customer Name  \n\u2022 Agent Name  \n\u2022 Status  \n\u2022 Topic  \n\u2022 Channel  \n\u2022 Conversation History \u2013 Bot and Agent  \n\u2022 Notes, Attachments if any", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"92fbde07-aa28-43e9-94d9-6c947ed9f6c7": {"node_ids": ["1b1fd5dd-249b-4d05-a1c8-c1e9019aa671"], "metadata": {"page_label": "1", "file_name": "DialogView FRD New.pdf"}}, "67328000-a456-41c6-b338-7b19134c7f8a": {"node_ids": ["7556982d-78ce-4c62-8ad3-88cd390ccafc"], "metadata": {"page_label": "2", "file_name": "DialogView FRD New.pdf"}}, "4f270ea8-5119-457f-b30f-f935cacfcc05": {"node_ids": ["6ef2dc9d-4010-435a-b627-4527da9e9fee"], "metadata": {"page_label": "3", "file_name": "DialogView FRD New.pdf"}}, "c8c03c6f-40c9-4056-af40-105edc4e67da": {"node_ids": ["a8983c4d-df4f-4be3-823d-9871f94178fc"], "metadata": {"page_label": "4", "file_name": "DialogView FRD New.pdf"}}, "6fc374f6-e2bb-497f-aae8-e26a1670aef3": {"node_ids": ["c1fa82e0-c487-44f8-85e6-d0d54e1c26c8"], "metadata": {"page_label": "5", "file_name": "DialogView FRD New.pdf"}}, "90e5e713-b69e-4464-a87d-f3307429e275": {"node_ids": ["af194583-e290-4e41-9652-6fc09a9b33d9"], "metadata": {"page_label": "6", "file_name": "DialogView FRD New.pdf"}}, "88b56d42-63e5-4a04-b352-3397c43e7bbf": {"node_ids": ["442ca05d-5af1-42a2-8e6b-1fdb3b2660b0"], "metadata": {"page_label": "7", "file_name": "DialogView FRD New.pdf"}}, "4bf62372-e0f0-4d06-8436-9c49b023b393": {"node_ids": ["7a4da92c-e692-4e92-92be-9c937af00ffe"], "metadata": {"page_label": "8", "file_name": "DialogView FRD New.pdf"}}, "dc3b7b00-1362-44fd-853a-5fb636b69642": {"node_ids": ["f8d5162d-bd2f-47d0-ba15-2abf35ad375c"], "metadata": {"page_label": "9", "file_name": "DialogView FRD New.pdf"}}, "cdf64a4a-429b-4a24-9676-73f2814b7ec2": {"node_ids": ["47a0179a-68ee-4d8b-8f38-f52337de7081"], "metadata": {"page_label": "10", "file_name": "DialogView FRD New.pdf"}}, "22c53d3c-0070-44b9-b58a-0af4bf4a5a49": {"node_ids": ["8422085d-0839-4898-9705-ac876bc685e2"], "metadata": {"page_label": "11", "file_name": "DialogView FRD New.pdf"}}, "0a2d88d6-ec11-4d4f-8987-780af10b3f5c": {"node_ids": ["6946ef30-79c8-450b-837c-55485c7a0996"], "metadata": {"page_label": "12", "file_name": "DialogView FRD New.pdf"}}, "5b13be56-0e05-4ee1-8976-0fb8d204cd0e": {"node_ids": ["e33aa264-ba37-49c8-9521-8270a59d5ca6"], "metadata": {"page_label": "13", "file_name": "DialogView FRD New.pdf"}}, "1664391b-e9c9-4576-9efa-7a7ffb44e1a8": {"node_ids": ["71b319e8-0528-4000-be1f-8c76eee2528a"], "metadata": {"page_label": "14", "file_name": "DialogView FRD New.pdf"}}}}